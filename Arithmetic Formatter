def arithmetic_arranger(problems, display_results=False):
    if len(problems) > 5:
        return "Error: Too many problems."
    
    first_operands = []
    second_operands = []
    operators = []
    results = []
    
    # Split up the numbers and operator in the problem
    for problem in problems:
        operand1, operator, operand2 = problem.split()
        
        # Ensure the entered numbers are only digits
        if not operand1.isdigit() or not operand2.isdigit():
            return "Error: Numbers must only contain digits."
        
        # Check for correct operator
        if operator not in ['+', '-']:
            return "Error: Operator must be '+' or '-'."
        
        # Ensure the maximum number of digits for operands
        if len(operand1) > 4 or len(operand2) > 4:
            return "Error: Numbers cannot be more than four digits."
        
        first_operands.append(operand1)
        second_operands.append(operand2)
        operators.append(operator)
        
        # Calculate and store results if display_results is True
        if display_results:
            if operator == '+':
                result = str(int(operand1) + int(operand2))
            else:
                result = str(int(operand1) - int(operand2))
            results.append(result)
    
    # Prepare lines for the arranged problems
    first_line = []
    second_line = []
    dash_line = []
    result_line = []
    
    for i in range(len(problems)):
        width = max(len(first_operands[i]), len(second_operands[i])) + 2
        first_line.append(first_operands[i].rjust(width))
        second_line.append(operators[i] + second_operands[i].rjust(width - 1))
        dash_line.append('-' * width)
        if display_results:
            result_line.append(results[i].rjust(width))
    
    # Combine the lines with four spaces between each problem
    arranged_problems = '    '.join(first_line) + '\n' + '    '.join(second_line) + '\n' + '    '.join(dash_line)
    if display_results:
        arranged_problems += '\n' + '    '.join(result_line)
    
    return arranged_problems
